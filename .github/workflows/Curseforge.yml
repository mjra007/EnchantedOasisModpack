name: Curseforge Modpack build

on:
  push:
    branches: [ "release" ]
  pull_request:
    branches: [ "release" ]

  workflow_dispatch:
jobs:
  buildCurseForge:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3 
      
      - name: Setup Go environment
        uses: actions/setup-go@v3.2.0
        with: 
          go-version: '>=1.18.0'
      - run: go version
 
      - name: Install packwiz
        run: go install github.com/packwiz/packwiz@latest
        
      - name: Build curseforge
        run: packwiz curseforge export 
               
      - name: Read version
        id: modpackVersion
        uses: SebRollen/toml-action@v1.0.0
        with: 
          file: 'pack.toml'
          field: 'version'
          
      - name: Read pack name 
        id: packName
        uses: SebRollen/toml-action@v1.0.0
        with: 
          file: 'pack.toml'
          field: 'name' 
      
      - name: Rename file 
        run: mv "${{ steps.packName.outputs.value }}-${{ steps.modpackVersion.outputs.value }}.zip" "${{ steps.packName.outputs.value }}CurseForge-${{ steps.modpackVersion.outputs.value }}.zip"

      - name: Download TechnicSolder packager
        run: | 
          wget https://github.com/mjra007/TechnicSolderPackager/releases/download/ver-5319cc593d8d227e9aff18d4b2676389d32090ea/technicsolderpackager.zip -P ./
          unzip ./technicsolderpackager.zip
          
      - name: Execute Downloader
        run: dotnet TechnicSolderPackager.dll downloader ${{secrets.CURSEFORGEAPIKEY}}
      
      - name: Execute Packager
        run: dotnet TechnicSolderPackager.dll packager ${{ steps.modpackVersion.outputs.value }} ${{ steps.packName.outputs.value }}TechnicSolder
      
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: "${{ steps.packName.outputs.value }}-${{ steps.modpackVersion.outputs.value }}"
          tag_name: ${{ steps.modpackVersion.outputs.value }}-${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      
      - name: Upload Curseforge artifact
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "${{ steps.packName.outputs.value }}CurseForge-${{ steps.modpackVersion.outputs.value }}.zip"
          asset_name: "${{ steps.packName.outputs.value }}CurseForge-${{ steps.modpackVersion.outputs.value }}.zip"
          asset_content_type: application/zip
      
      - name: Upload TechnicSolder artifact
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "${{ steps.packName.outputs.value }}TechnicSolder-${{ steps.modpackVersion.outputs.value }}.zip"
          asset_name: "${{ steps.packName.outputs.value }}TechnicSolder-${{ steps.modpackVersion.outputs.value }}.zip"
          asset_content_type: application/zip
      
      - name: Publish release
        uses: eregon/publish-release@v1
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
     
      - name: Upload to CurseForge 
        uses: mjra007/EnchantedOasisModpack@latest
        with:
          token: ${{secrets.CURSEFORGEMODPACKKEY}}
          project_id: 287738
          game_endpoint: minecraft 
          file_path: ${{ steps.packName.outputs.value }}CurseForge-${{ steps.modpackVersion.outputs.value }}.zip  
          game_versions: 6756 
          release_type: release
